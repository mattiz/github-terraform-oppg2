name: 'Stage to prod'

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/webapp/**'
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  TF_VAR_database_user: ${{ secrets.DATABASE_USER }}
  TF_VAR_database_pass: ${{ secrets.DATABASE_PASS }}
  WORKING_DIR: ./terraform/webapp

jobs:
  stage:
    name: 'Stage'
    runs-on: ubuntu-latest
    environment: staging

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init -backend-config=backend.conf
      working-directory: ${{env.WORKING_DIR}}
    
    - name: Terraform workspace stage
      run: terraform workspace select -or-create stage
      working-directory: ${{env.WORKING_DIR}}

    - name: Terraform Plan
      run: terraform plan
      working-directory: ${{env.WORKING_DIR}}

    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false

  prod:
    name: 'Prod'
    needs: stage
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init -backend-config=backend.conf
      working-directory: ${{env.WORKING_DIR}}
    
    - name: Terraform workspace prod
      run: terraform workspace select -or-create prod
      working-directory: ${{env.WORKING_DIR}}

    - name: Terraform Plan
      run: terraform plan
      working-directory: ${{env.WORKING_DIR}}

    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false
      working-directory: ${{env.WORKING_DIR}}
